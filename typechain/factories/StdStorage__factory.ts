/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { StdStorage, StdStorageInterface } from "../StdStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "fsig",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "keysHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "slot",
        type: "uint256",
      },
    ],
    name: "SlotFound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "slot",
        type: "uint256",
      },
    ],
    name: "WARNING_UninitedSlot",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "b",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "bytesToBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6104bf610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063535849391461003a575b600080fd5b610054600480360381019061004f91906102a2565b61006a565b6040516100619190610317565b60405180910390f35b6000806000602085511161007f578451610082565b60205b905060005b818110156101065760088161009c9190610361565b60ff60f81b8783886100ae91906103bb565b815181106100bf576100be610411565b5b602001015160f81c60f81b167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c8317925080806100fe90610440565b915050610087565b50819250505092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61017982610130565b810181811067ffffffffffffffff8211171561019857610197610141565b5b80604052505050565b60006101ab610112565b90506101b78282610170565b919050565b600067ffffffffffffffff8211156101d7576101d6610141565b5b6101e082610130565b9050602081019050919050565b82818337600083830152505050565b600061020f61020a846101bc565b6101a1565b90508281526020810184848401111561022b5761022a61012b565b5b6102368482856101ed565b509392505050565b600082601f83011261025357610252610126565b5b81356102638482602086016101fc565b91505092915050565b6000819050919050565b61027f8161026c565b811461028a57600080fd5b50565b60008135905061029c81610276565b92915050565b600080604083850312156102b9576102b861011c565b5b600083013567ffffffffffffffff8111156102d7576102d6610121565b5b6102e38582860161023e565b92505060206102f48582860161028d565b9150509250929050565b6000819050919050565b610311816102fe565b82525050565b600060208201905061032c6000830184610308565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061036c8261026c565b91506103778361026c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156103b0576103af610332565b5b828202905092915050565b60006103c68261026c565b91506103d18361026c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561040657610405610332565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061044b8261026c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561047e5761047d610332565b5b60018201905091905056fea26469706673582212203ff28cf29bfc9a5d025640b6f680caa982287568c32f93bc36aa997383a9e61f64736f6c634300080c0033";

export class StdStorage__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StdStorage> {
    return super.deploy(overrides || {}) as Promise<StdStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StdStorage {
    return super.attach(address) as StdStorage;
  }
  connect(signer: Signer): StdStorage__factory {
    return super.connect(signer) as StdStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StdStorageInterface {
    return new utils.Interface(_abi) as StdStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StdStorage {
    return new Contract(address, _abi, signerOrProvider) as StdStorage;
  }
}
